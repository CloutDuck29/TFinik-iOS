import SwiftUI

struct AnalyticsMenuView: View {
    @AppStorage("selectedTab") private var selectedTab: String = "analytics"
    @State private var isShowingExpensesGraphic = false
    @State private var isShowingIncomeGraphic = false

    var body: some View {
        ZStack {
            BackgroundView()

            VStack {
                // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–∫—Ä–∞–Ω–∞
                VStack {
                    HStack {
                        Text("üìà")
                            .font(.system(size: 32))
                        Text("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
                            .font(.title2.bold())
                            .foregroundColor(.white)
                    }
                    .padding(.top, 125)
                }

                // –ö–Ω–æ–ø–∫–∏
                VStack(spacing: 16) {
                    AnalyticsButton(title: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏", icon: "üéØ", action: {
                        // TODO
                    })
                    AnalyticsButton(title: "–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", icon: "üí∏", action: {
                        // TODO
                    })
                    AnalyticsButton(title: "–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤", icon: "üí∞", action: {
                        isShowingExpensesGraphic = true
                    })
                    AnalyticsButton(title: "–ü—Ä–æ–≥–Ω–æ–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤", icon: "üõ†", action: {
                        // TODO
                    })
                    AnalyticsButton(title: "–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–æ–≤", icon: "ü§ë", action: {
                        isShowingIncomeGraphic = true
                    })
                }
                .padding(.horizontal, 20)
                .frame(maxWidth: .infinity)
                .padding(.top, 24)

                Spacer()
            }
            .padding(.bottom, 140)
        }
        .ignoresSafeArea()
        .navigationDestination(isPresented: $isShowingExpensesGraphic) {
            ExpensesGraphView()
        }
        .navigationDestination(isPresented: $isShowingIncomeGraphic) {
            IncomeGraphView()
        }
    }
}


struct AnalyticsButton: View {
    let title: String
    let icon: String
    let action: () -> Void

    var body: some View {
        Button(action: action) {
            HStack {
                // Spacer –ø–µ—Ä–µ–¥ —ç–º–æ–¥–∑–∏
                Spacer()
                // –≠–º–æ–¥–∑–∏
                Text(icon)
                    .font(.system(size: 28)) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —ç–º–æ–¥–∑–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
                Spacer(minLength: 8) // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º
                // –¢–µ–∫—Å—Ç
                Text(title)
                    .font(.headline)
                    .foregroundColor(.white)
                // Spacer –ø–æ—Å–ª–µ —Ç–µ–∫—Å—Ç–∞
                Spacer()
            }
            .padding()
            .frame(maxWidth: .infinity)
            .background(Color(hex: "1A1A1F")) // –ó–∞–¥–∞–µ–º –Ω—É–∂–Ω—ã–π —Ü–≤–µ—Ç
            .cornerRadius(12)
            .shadow(color: .black.opacity(0.3), radius: 4, x: 0, y: 2)
            .overlay(
                RoundedRectangle(cornerRadius: 12)
                    .stroke(
                        LinearGradient(gradient: Gradient(colors: [Color(hex: "5800D3"), Color(hex: "8661D2")]), startPoint: .topLeading, endPoint: .bottomTrailing),
                        lineWidth: 1
                    )
            ) // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π stroke
        }
        .frame(maxWidth: .infinity)
    }
}

struct AnalyticsMenuView_Previews: PreviewProvider {
    static var previews: some View {
        AnalyticsMenuView()
            .preferredColorScheme(.dark)
    }
}
