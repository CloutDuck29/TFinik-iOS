import SwiftUI

struct GoalDetailView: View {
    let goal: FinancialGoal
    @State private var isEditing = false
    @State private var isAddingAmount = false

    var progress: Double {
        min(goal.currentAmount / goal.targetAmount, 1.0)
    }

    var body: some View {
        ZStack {
            BackgroundView()

            VStack(spacing: 20) {
                Text("üéØ")
                    .font(.system(size: 40))
                Text(goal.name)
                    .font(.title2.bold())
                    .foregroundColor(.white)

                VStack(alignment: .leading, spacing: 12) {
                    ProgressView(value: progress)
                        .progressViewStyle(LinearProgressViewStyle(tint: .purple))
                        .background(Color.gray.opacity(0.3))
                        .cornerRadius(4)

                    Text("–ü—Ä–æ–≥—Ä–µ—Å—Å: \(Int(progress * 100))% (\(Int(goal.currentAmount))‚ÇΩ –∏–∑ \(Int(goal.targetAmount))‚ÇΩ)")
                        .font(.subheadline)
                        .foregroundColor(.gray)

                    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–∑–∞–≥–ª—É—à–∫–∞ —Å—Ä–æ–∫–∞)
                    Text("–°—Ä–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: ‚Äî")
                        .font(.subheadline)
                        .foregroundColor(.gray)
                    
                    Text("–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂: ‚Äî")
                        .font(.subheadline)
                        .foregroundColor(.gray)

                }
                .padding(.horizontal)

                HStack(spacing: 20) {
                    Button("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å") {
                        isEditing = true
                    }
                    .foregroundColor(.white)
                    .padding()
                    .frame(maxWidth: .infinity)
                    .background(Color.blue.opacity(0.8))
                    .cornerRadius(12)

                    Button("–î–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É") {
                        isAddingAmount = true
                    }
                    .foregroundColor(.black)
                    .padding()
                    .frame(maxWidth: .infinity)
                    .background(Color.white)
                    .cornerRadius(12)
                }
                .padding(.horizontal)

                Spacer()
            }
            .padding(.top, 60)
            .sheet(isPresented: $isEditing) {
                EditGoalView(goal: goal)
            }
            .sheet(isPresented: $isAddingAmount) {
                AddAmountView(goal: goal)
            }
        }
    }
}
