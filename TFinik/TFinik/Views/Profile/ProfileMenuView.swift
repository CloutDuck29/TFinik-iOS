import SwiftUI

struct ProfileMenuView: View {
    @AppStorage("selectedTab") private var selectedTab: String = "analytics"
    @State private var isShowingBankUploadView = false

    var body: some View {
        NavigationStack {
            ZStack {
                BackgroundView()

                VStack {
                    VStack {
                        HStack {
                            Text("üë¶üèª")
                                .font(.system(size: 32))
                            Text("–ü—Ä–æ—Ñ–∏–ª—å")
                                .font(.title2.bold())
                                .foregroundColor(.white)
                        }
                        .padding(.top, 150)
                    }

                    VStack(spacing: 16) {
                        // –ó–∞–º–µ–Ω—è–µ–º –∑–¥–µ—Å—å –¥–µ–π—Å—Ç–≤–∏–µ
                        AnalyticsButton(title: "–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—ã–ø–∏—Å–∫–∏", icon: "üéØ", action: {
                            isShowingBankUploadView = true
                        })
                        AnalyticsButton(title: "–°–æ–≤–µ—Ç—ã –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º", icon: "üî•", action: {})
                        AnalyticsButton(title: "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è", icon: "üìÉ", action: {})
                        AnalyticsButton(title: "–ü–æ—Ä—Ç—Ä–µ—Ç –º–µ—Å—è—Ü–∞", icon: "üòÅ", action: {})
                    }
                    .padding(.horizontal, 20)
                    .frame(maxWidth: .infinity)
                    .padding(.top, 24)

                    Spacer()
                }
                .padding(.bottom, 140)
            }
            .ignoresSafeArea()
            .navigationDestination(isPresented: $isShowingBankUploadView) {
                BankUploadView()
            }
        }
    }
}


struct ProfileButton: View {
    let title: String
    let icon: String
    let action: () -> Void

    var body: some View {
        Button(action: action) {
            HStack {
                // Spacer –ø–µ—Ä–µ–¥ —ç–º–æ–¥–∑–∏
                Spacer()
                // –≠–º–æ–¥–∑–∏
                Text(icon)
                    .font(.system(size: 28)) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —ç–º–æ–¥–∑–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
                Spacer(minLength: 8) // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º
                // –¢–µ–∫—Å—Ç
                Text(title)
                    .font(.headline)
                    .foregroundColor(.white)
                // Spacer –ø–æ—Å–ª–µ —Ç–µ–∫—Å—Ç–∞
                Spacer()
            }
            .padding()
            .frame(maxWidth: .infinity)
            .background(Color(hex: "1A1A1F")) // –ó–∞–¥–∞–µ–º –Ω—É–∂–Ω—ã–π —Ü–≤–µ—Ç
            .cornerRadius(12)
            .shadow(color: .black.opacity(0.3), radius: 4, x: 0, y: 2)
            .overlay(
                RoundedRectangle(cornerRadius: 12)
                    .stroke(
                        LinearGradient(gradient: Gradient(colors: [Color(hex: "5800D3"), Color(hex: "8661D2")]), startPoint: .topLeading, endPoint: .bottomTrailing),
                        lineWidth: 1
                    )
            ) // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π stroke
        }
        .frame(maxWidth: .infinity)
    }
}

struct ProfileMenuView_Previews: PreviewProvider {
    static var previews: some View {
        AnalyticsMenuView()
            .preferredColorScheme(.dark)
    }
}
